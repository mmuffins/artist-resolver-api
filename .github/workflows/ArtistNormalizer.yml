name: .NET

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    env:
      Configuration: Release
      Framework: net6.0
      Runtime: win-x64
      
    steps:
    - uses: actions/checkout@v2
            
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.*
      
    - name: dotnet restore
      run: dotnet restore
      
    - name: dotnet build
      run: dotnet build ArtistNormalizer.API.sln --configuration ${{ env.Configuration }} -p:PublishSingleFile=true --self-contained false -p:PublishTrimmed=false -p:PublishReadyToRun=true --framework net6.0 --no-restore
      
    - name: dotnet test
      run: dotnet test ArtistNormalizer.API.sln --configuration ${{ env.Configuration }} --framework ${{ env.Framework }} --verbosity normal
      
    - name: dotnet publish
      run: dotnet publish ArtistNormalizer.API\ArtistNormalizer.API.csproj --configuration ${{ env.Configuration }} -p:PublishSingleFile=true --self-contained false -p:PublishTrimmed=false -p:PublishReadyToRun=false --runtime ${{ env.Runtime }} --framework ${{ env.Framework }} --output publish
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: Application
        path: ${{ github.workspace }}\publish
      
    - name: Zip Files
      run: Compress-Archive -Path "${{ github.workspace }}\publish\*" -DestinationPath "${{ github.workspace }}\publish\ArtistNormalizer.zip"
      
    - name: Create Release
      uses: actions/create-release@v1
      if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
      id: create_release
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ github.run_id }}
        release_name: Release ${{ github.run_id }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      id: upload-release-asset 
      if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}\publish\ArtistNormalizer.zip
        asset_name: ArtistNormalizer
        asset_content_type: application/zip
